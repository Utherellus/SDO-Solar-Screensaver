# SDO Solar Screensaver (Android TV / Xiaomi Smart TV)

This is a **minimal Android app** (Kotlin) that implements a simple screensaver (DreamService) which plays a video from a pasted URL using ExoPlayer. It also includes a small SettingsActivity so you can paste/change the MP4 URL. Build with Android Studio and install on your Android TV.

---

## File: settings.gradle (root)

```
rootProject.name = "sdo-screensaver"
include ':app'
```

---

## File: build.gradle (Project)

```
// (Gradle wrapper + repositories)
buildscript {
    repositories { google(); mavenCentral() }
    dependencies { classpath("com.android.tools.build:gradle:8.1.0") }
}
allprojects { repositories { google(); mavenCentral() } }
```

---

## File: app/build.gradle (module)

```
plugins {
    id 'com.android.application'
    id 'kotlin-android'
}

android {
    compileSdk 34
    defaultConfig {
        applicationId "com.example.sdoscreensaver"
        minSdk 26
        targetSdk 34
        versionCode 1
        versionName "1.0"
    }
    buildTypes { release { minifyEnabled false } }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.9.0"
    implementation 'com.google.android.exoplayer:exoplayer:2.20.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.core:core-ktx:1.10.1'
}
```

---

## File: app/src/main/AndroidManifest.xml

```
<manifest package="com.example.sdoscreensaver"
          xmlns:android="http://schemas.android.com/apk/res/android">

    <uses-permission android:name="android.permission.INTERNET" />

    <application
        android:label="SDO Screensaver"
        android:allowBackup="true">

        <!-- Settings activity to paste URL -->
        <activity android:name=".SettingsActivity">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>

        <!-- DreamService for screensaver -->
        <service
            android:name=".SolarDreamService"
            android:label="SDO Solar Screensaver"
            android:permission="android.permission.BIND_DREAM_SERVICE">
            <intent-filter>
                <action android:name="android.service.dreams.DreamService" />
            </intent-filter>

            <meta-data android:name="android.service.dream"
                       android:resource="@xml/dream" />
        </service>

    </application>
</manifest>
```

---

## File: app/src/main/res/xml/dream.xml

```
<?xml version="1.0" encoding="utf-8"?>
<dream xmlns:android="http://schemas.android.com/apk/res/android"
    android:settingsActivity="com.example.sdoscreensaver.SettingsActivity" />
```

---

## File: app/src/main/res/layout/dream_layout.xml

```
<?xml version="1.0" encoding="utf-8"?>
<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent">

    <com.google.android.exoplayer2.ui.PlayerView
        android:id="@+id/player_view"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:useController="false" />

    <TextView
        android:id="@+id/status"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_gravity="bottom|start"
        android:padding="12dp"
        android:textColor="#FFFFFF"
        android:textSize="14sp" />

</FrameLayout>
```

---

## File: app/src/main/java/com/example/sdoscreensaver/SolarDreamService.kt

```
package com.example.sdoscreensaver

import android.service.dreams.DreamService
import android.view.LayoutInflater
import android.view.View
import android.widget.TextView
import com.google.android.exoplayer2.ExoPlayer
import com.google.android.exoplayer2.MediaItem
import com.google.android.exoplayer2.PlaybackParameters
import com.google.android.exoplayer2.ui.PlayerView

class SolarDreamService : DreamService() {

    private var player: ExoPlayer? = null
    private var playerView: PlayerView? = null
    private var statusText: TextView? = null

    override fun onAttachedToWindow() {
        super.onAttachedToWindow()
        // Allow touch / interactive -- set false to disable interaction
        isInteractive = false
        // Keep screen on while dreaming
        keepScreenOn = true

        val root: View = LayoutInflater.from(this).inflate(R.layout.dream_layout, null)
        setContentView(root)

        playerView = root.findViewById(R.id.player_view)
        statusText = root.findViewById(R.id.status)
    }

    override fun onDreamingStarted() {
        super.onDreamingStarted()
        startPlayback()
    }

    override fun onDreamingStopped() {
        stopPlayback()
        super.onDreamingStopped()
    }

    override fun onDetachedFromWindow() {
        stopPlayback()
        super.onDetachedFromWindow()
    }

    private fun startPlayback() {
        val prefs = getSharedPreferences("sdo_prefs", MODE_PRIVATE)
        val url = prefs.getString("video_url", null)
        if (url.isNullOrEmpty()) {
            statusText?.text = "No URL set. Open app to set URL."
            return
        }

        player = ExoPlayer.Builder(this).build()
        playerView?.player = player

        val media = MediaItem.fromUri(url)
        player?.setMediaItem(media)
        player?.repeatMode = ExoPlayer.REPEAT_MODE_ALL
        // set playback speed to 0.5x
        player?.playbackParameters = PlaybackParameters(0.5f)

        player?.prepare()
        player?.playWhenReady = true

        statusText?.text = "Playing: $url"
    }

    private fun stopPlayback() {
        playerView?.player = null
        player?.release()
        player = null
    }
}
```

---

## File: app/src/main/java/com/example/sdoscreensaver/SettingsActivity.kt

```
package com.example.sdoscreensaver

import android.content.Intent
import android.os.Bundle
import android.widget.Button
import android.widget.EditText
import androidx.appcompat.app.AppCompatActivity

class SettingsActivity : AppCompatActivity() {

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_settings)

        val edit = findViewById<EditText>(R.id.url_edit)
        val save = findViewById<Button>(R.id.save_btn)

        val prefs = getSharedPreferences("sdo_prefs", MODE_PRIVATE)
        edit.setText(prefs.getString("video_url", ""))

        save.setOnClickListener {
            prefs.edit().putString("video_url", edit.text.toString().trim()).apply()
            // Optionally return to home after saving
            finish()
        }
    }
}
```

---

## File: app/src/main/res/layout/activity_settings.xml

```
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:orientation="vertical"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:padding="20dp">

    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Enter MP4 URL to use as screensaver" />

    <EditText
        android:id="@+id/url_edit"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:hint="https://.../latest_1024_0171_synoptic.mp4" />

    <Button
        android:id="@+id/save_btn"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Save" />

</LinearLayout>
```

---

## Notes & Usage

1. Build the project in Android Studio (set target to Android TV or generic Android). Install APK on your Xiaomi TV.
2. Open the app (SettingsActivity) and paste the MP4 URL (e.g., the SDO link).
3. Go to **Settings â†’ Device Preferences â†’ Screen saver** on your TV and choose "SDO Solar Screensaver" as the screensaver. If your TV hides custom screensavers, open the Screensaver settings via ADB:

   ```bash
   adb connect <TV_IP>
   adb shell am start -a android.settings.DREAM_SETTINGS
   ```

4. The DreamService will read the saved URL and autoplay it at **0.5Ã— speed**, looping.

5. If your TV/network blocks direct streaming, consider hosting the MP4 on a local NAS or using a small Pi to download the file daily.

---

If you want, I can also:
- provide a prebuilt APK you can sideload (I cannot directly host files here), or
- convert the app to a minimal Java version, or
- add advanced controls (play/pause via remote, bitrate fallback, local caching).

Enjoy your living-room Sun ðŸŒž
